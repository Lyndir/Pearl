#!/usr/bin/env bash
shopt -s extglob

cd "${BASH_SOURCE%/*}/.."
main=Pearl
for module in "$main"!(*Tests*)/; do
    module=${module%/}
    printf "$module.."

    printf ' %d headers.\n' "$(
        cd "$module"; headers=0
        {
            define=${module^^} define=${define//-/_}

            # Check wether the user has enabled the module from the Pearl prefix file (allowing all other modules to see its availability).
            cat <<.
#ifndef $define
#error $define used but not enabled.  If you want to use this library, first enable it with #define $define in your Pearl prefix file.
#endif

.
            cat > "$module.m" <<.
#if ! __has_feature(objc_arc)
#error $define requires ARC.  Change your build settings to enable ARC support in your compiler and try again.
#endif
.

            # All modules depend on Pearl.h
            [[ -e "$module-Dependencies.h" ]] && \
                printf '#import "%s.h"\n' "$module-Dependencies"
            [[ $module != $main ]] && \
                printf '#import "%s.h"\n' "$main"

            # Enumerate the module's headers.
            while read f; do
                (( headers++ ))
                printf '#import "%s"\n' "${f##*/}"
            done < <(find -s . '(' -name private -o -name lib ')' -prune -o '(' ! -name "$module.h" ! -name "$module-*.h" -name '*.h' -print ')')
        } > "$module.h"
        echo "$headers")"
done
